/*! Bronson - v0.1.0 - 2012-08-15
* http://github.com/eclifford/bronson/
* Copyright (c) 2012 Eric Clifford; Licensed MIT */
var __slice=[].slice,__hasProp={}.hasOwnProperty;(function(a,b){return typeof define=="function"&&define.amd?define([],b()):a.Bronson=b()})(this,function(){var a,b,c,d,e;return b=window.Bronson={version:"0.1.0"},require.onError=function(a){var b;if(a.requireType==="timeout")return console.error("Could not load module "+a.requireModules);throw b=a.requireModules&&a.requireModules[0],require.undef(b),a},requirejs.onResourceLoad=function(a,b,c){},a=b.Api={publish:function(a){return b.Core.publish(a,arguments[1])},subscribe:function(a,c,e){if(d.validate(a,c))return b.Core.subscribe(a,c,e);throw new Error("Bronson.Api#subscribe: Subscriber "+a+" not allowed to listen on event "+c)},unsubscribe:function(a,c){return b.Core.unsubscribe(a,c)},unsubscribeAll:function(a){return b.Core.unsubscribeAll(a)},loadModule:function(a,c,d,e){return d==null&&(d={}),e==null&&(e=!0),b.Core.loadModule(a,d,c,e)},unloadAllModules:function(){return b.Core.unloadAllModules()},unloadModule:function(a){return b.Core.unloadModule(a)},startModule:function(a){return b.Core.startModule(a)},stopModule:function(a){return b.Core.stopModule(a)},stopAllModules:function(){return b.Core.stopAllModules()},setPermissions:function(a){return b.Permissions.set(a)},getModulesInfo:function(){return b.Core.modules},getModuleById:function(a){var c,d,e,f,g,h;g=b.Core.modules;for(d in g)if(g.hasOwnProperty(d)){h=g[d];for(e=0,f=h.length;e<f;e++){c=h[e];if(c.id===a)return c}}},getEventsInfo:function(){return b.Core.events}},d=b.Permissions={enabled:!1,rules:{},set:function(a){return this.rules=b.Util.extend(this.rules,a)},validate:function(a,b){var c,d;if(a==null||typeof a!="string")throw new Error("Bronson.Permissions#validate: must provide a valid subscriber");if(b==null||typeof b!="string")throw new Error("Bronson.Permissions#validate: must provide a valid channel");return this.enabled?(c=(d=this.rules[a])!=null?d[b]:void 0,c===void 0?!1:c):!0}},c=b.Core={events:{},modules:{},publish:function(a){var b,c,d,e,f,g;if(a==null||typeof a!="string")throw new Error("Bronson.Core#publish: must supply a valid event");if(!this.events[a])return!0;d=this.events[a].slice(),b=[].slice.call(arguments,1),g=[];for(e=0,f=d.length;e<f;e++)c=d[e],g.push(c.callback.apply(this,b));return g},subscribe:function(a,b,c){if(a==null||typeof a!="string")throw new Error("Bronson.Core#subscribe: must supply a valid subscriber");if(b==null||typeof b!="string")throw new Error("Bronson.Core#subscribe: must supply a valid event");if(c!=null&&typeof c!="function")throw new Error("Bronson.Core#subscribe: callback must be a function");return this.events[b]=this.events[b]?this.events[b]:[],this.events[b].push({subscriber:a,callback:c})},unsubscribe:function(a,b){var c,d,e,f,g;g=this.events[b];for(c=e=0,f=g.length;e<f;c=++e){d=g[c];if(d.subscriber===a){this.events[b].splice(c,1);return}}},unsubscribeAll:function(a){var b,c,d;d=[];for(b in this.events)if(this.events.hasOwnProperty(b)){c=this.events[b].length;while(c--)this.events[b][c].subscriber===a&&this.events[b].splice(c,1);this.events[b].length===0?d.push(delete this.events[b]):d.push(void 0)}else d.push(void 0);return d},loadModule:function(a,b,c,d){var e=this;if(a==null||typeof a!="string")throw new Error("Bronson.Core#loadModule: must supply a valid module");if(d!=null&&typeof d!="boolean")throw new Error("Bronson.Core#loadModule: autostart must be a valid boolean");return require(["module",a],function(f,g){var h;try{return h=new g(b),h.id=f.id,e.modules[a]=e.modules[a]?e.modules[a]:[],e.modules[a].push(h),h.load(),d&&h.start(),c(h)}catch(i){throw new Error("Bronson.Core#loadModule: "+i)}})},unloadModule:function(a){var b,c,d,e,f,g;if(a==null||typeof a!="string")throw new Error("Bronson.Core#unloadModule: id must be valid");try{for(c in this.modules)if(this.modules.hasOwnProperty(c)){g=this.modules[c];for(d=e=0,f=g.length;e<f;d=++e){b=g[d];if(b.id===a){b.unload(),this.unsubscribeAll(a),this.modules[c].splice(d,1);return}}}if(this.modules[c].length===0)return require.undef(c),delete this.modules[c]}catch(h){throw new Error("Bronson.Core#unloadModule: "+h)}},unloadAllModules:function(){var a,b,c;c=[];for(b in this.modules)this.modules.hasOwnProperty(b)?c.push(function(){var c,d,e,f;e=this.modules[b],f=[];for(c=0,d=e.length;c<d;c++)a=e[c],f.push(this.unloadModule(a.id));return f}.call(this)):c.push(void 0);return c},startModule:function(a){var b,c,d,e,f,g;for(c in this.modules)if(this.modules.hasOwnProperty(c)){g=this.modules[c];for(d=e=0,f=g.length;e<f;d=++e){b=g[d];if(b.id===a){b.start();return}}}},stopModule:function(a){var b,c,d,e,f;for(c in this.modules)if(this.modules.hasOwnProperty(c)){f=this.modules[c];for(d=0,e=f.length;d<e;d++){b=f[d];if(b.id===a){b.stop();return}}}},stopAllModules:function(){var a,b,c;c=[];for(b in this.modules)this.modules.hasOwnProperty(b)?c.push(function(){var c,d,e,f;e=this.modules[b],f=[];for(c=0,d=e.length;c<d;c++)a=e[c],f.push(a.stop());return f}.call(this)):c.push(void 0);return c}},b.Module=function(){function a(){}return a.prototype.id="",a.prototype.disposed=!1,a.prototype.started=!1,a.prototype.load=function(){throw new Error("Bronson.Module#initialize: must override initialize")},a.prototype.start=function(){return this.started=!0},a.prototype.stop=function(){return this.started=!1},a.prototype.unload=function(){if(this.disposed)return;return this.disposed=!0,typeof Object.freeze=="function"?Object.freeze(this):void 0},a}(),e=b.Util={extend:function(){var a,b,c,d,e,f,g;c=arguments[0],a=2<=arguments.length?__slice.call(arguments,1):[];if(c==null)return{};for(f=0,g=a.length;f<g;f++){d=a[f];for(b in d){if(!__hasProp.call(d,b))continue;e=d[b],c[b]==null||typeof e!="object"?c[b]=e:c[b]=this.extend(c[b],e)}}return c}},b});